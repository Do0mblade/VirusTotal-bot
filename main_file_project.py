
import asyncio


from pprint import pprint

from aiogram import Bot, types
from aiogram.dispatcher import Dispatcher
from aiogram.utils import executor

import virustotal_python

from func.check_user_api import check_user_api
from func.check_return_data import check_answer
from func.decorators import benchmark
from func.delete_file import del_file
from func.get_info_about_file import get_info_about_file
from func.send_to_analys import send_to_analys
from func.texts import *
from func.download import download_file

from sett.config import TOKEN
from sett.config import VIRUSTOTAL_API

import datetime


bot = Bot(token=TOKEN)
dp = Dispatcher(bot)

@dp.message_handler(commands=['start', 'help'])
async def start_command(message: types.Message):
    text = await start_text()
    await message.answer(text, parse_mode='HTML')



@dp.message_handler(commands=['site', 'website'])
async def website_command(message: types.Message):
    text = '<a href="https://www.virustotal.com">–û—Ñ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π —Å–∞–π—Ç Virustotal</a>'
    await message.reply(text, parse_mode='HTML')


@dp.message_handler(commands=['info', 'user'])
async def profile_command(message: types.Message):
    id = message.from_user.id
    name = message.from_user.full_name
    premium = message.from_user.is_premium
    lan = message.from_user.language_code
    is_bot = message.from_user.is_bot
    text = await profile_text(id, name, premium, lan, is_bot)
    await message.reply(text, parse_mode='HTML')

@dp.message_handler(content_types=['audio', 'video', 'document', 'text', 'photo'])
async def analys_files(message: types.Message):

    msg = await message.reply('<b><i>üåê –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ñ–∞–π–ª–∞</i></b>', parse_mode='HTML')

    if message.text:
        await msg.edit_text('<b><i>üíÅüèº –ü—Ä–æ—Å—Ç–∏—Ç–µ, –Ω–æ —è –Ω–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é —Ç–µ–∫—Å—Ç!</i></b>', parse_mode='HTML')
        await asyncio.sleep(4)
        await msg.delete()
    elif message.photo:
        await msg.edit_text('<b><i>üíÅüèº –ü—Ä–æ—Å—Ç–∏—Ç–µ, –Ω–æ —è –Ω–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é —Ñ–æ—Ç–æ. \n–û—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ —Ñ–æ—Ç–æ –≤ –≤–∏–¥–µ —Ñ–∞–π–ª–∞, –¥–ª—è –µ–≥–æ –æ–±—Ä–∞–±–æ—Ç–∫–∏.</i></b>', parse_mode='HTML')
        await asyncio.sleep(10)
        await msg.delete()
    elif message.audio:
        await msg.edit_text('<b><i>üíÅüèº –ü—Ä–æ—Å—Ç–∏—Ç–µ, –Ω–æ —è –Ω–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é –∞—É–¥–∏–æ —Ñ–∞–π–ª—ã!</i></b>', parse_mode='HTML')
        await asyncio.sleep(4)
        await msg.delete()
    elif message.video:
        status_code = 0

        if message.caption:
            answer, api = await check_user_api(message.caption)
            if answer == 'More 1':
                await msg.edit_text('<b><i>‚ö† –í—ã –≤–≤–µ–ª–∏ –ª–∏—à–Ω–∏–µ –∞—Ä–≥—É–º–µ–Ω—Ç—ã! ‚ö†</i></b>', parse_mode='HTML')
            if answer == 'err api':
                await msg.edit_text('<b><i>‚ö† –° –≤–∞—à–∏–º <u>api</u> —á—Ç–æ-—Ç–æ –Ω–µ —Ç–∞–∫! ‚ö†</i></b>', parse_mode='HTML')
            if answer is True:
                status_code = 1
                API = api
        else:
            status_code = 1
            API = VIRUSTOTAL_API

        if status_code == 1:

            await msg.edit_text('<b>üìÑ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–∑–º–µ—Ä–∞ –≤–∏–¥–µ–æ</b>', parse_mode='HTML')

            if message.video.file_size <= 20971520:

                file_name = f'files/{message.video.file_name}'

                await msg.edit_text('<b>üì• –ó–∞–≥—Ä—É–∑–∫–∞ –≤–∏–¥–µ–æ –Ω–∞ —Å–µ—Ä–≤–µ—Ä</b>', parse_mode='HTML')

                if await download_file(message, file_name):

                    first_time = datetime.datetime.now()

                    await msg.edit_text('<b>üì§ –í—ã–≥—Ä—É–∑–∫–∞ –≤–∏–¥–µ–æ –Ω–∞ –∞–Ω–∞–ª–∏–∑</b>', parse_mode='HTML')

                    hash_file, vtotal = await send_to_analys(file_name, API)

                    if hash_file != 'Error':

                        await msg.edit_text('<b>üí§ –û–∂–∏–¥–∞–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞ —Å —Å–µ—Ä–≤–µ—Ä–∞</b>', parse_mode='HTML')

                        await del_file(file_name)

                        database, error = await get_info_about_file(hash_file, vtotal)

                        if database != 'Error API':

                            await msg.edit_text('<b>üóÇ –°—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞</b>', parse_mode='HTML')

                            last_analys, first_analys, prog, malicious, type, hash, magic, size, id, tag = await check_answer(
                                database)

                            if API == VIRUSTOTAL_API:
                                api_key = ''
                            else:
                                api_key = f"\nüîë –í–∞—à api:\n‚ñ´{API}\n"

                            second_time = datetime.datetime.now()

                            time = second_time - first_time

                            text = await return_data_analys_text(last_analys, first_analys, prog, malicious, type, hash,
                                                                 magic, size, id, tag, message.video.file_name, time.seconds, api_key)

                            await msg.edit_text(text, parse_mode='HTML')

                        else:
                            await del_file(file_name)
                            await msg.edit_text(
                                f'<b><i>‚ö† –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞! ‚ö†\n–û—à–∏–±–∫–∞:</i></b>\n{error}\n\n–ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø–æ–≤—Ç–æ—Ä–∏—Ç—å—Å—è, –ø—Ä–æ—Å—å–±–∞ –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏ –±–æ—Ç–∞.',
                                parse_mode='HTML')

                    else:
                        await del_file(file_name)
                        await msg.edit_text(
                            f'<b><i>‚ö† –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞! ‚ö†\n–û—à–∏–±–∫–∞:</i></b>\n{vtotal}\n\n–ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø–æ–≤—Ç–æ—Ä–∏—Ç—å—Å—è, –ø—Ä–æ—Å—å–±–∞ –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏ –±–æ—Ç–∞.',
                            parse_mode='HTML')


                else:
                    await del_file(file_name)
                    await msg.edit_text('<b><i>‚ö† –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏ —Ñ–∞–π–ª–∞! ‚ö†</i></b>',
                                        parse_mode='HTML')

            else:
                await msg.edit_text('<b><i>‚ö† –ü—Ä–µ–≤—ã—à–µ–Ω–æ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–∞ —Ñ–∞–π–ª–∞ –≤ 20 –ú–±! ‚ö†</i></b>', parse_mode='HTML')

    elif message.document:

        status_code = 0

        if message.caption:
            answer, api = await check_user_api(message.caption)
            if answer == 'More 1':
                await msg.edit_text('<b><i>‚ö† –í—ã –≤–≤–µ–ª–∏ –ª–∏—à–Ω–∏–µ –∞—Ä–≥—É–º–µ–Ω—Ç—ã! ‚ö†</i></b>', parse_mode='HTML')
            if answer == 'err api':
                await msg.edit_text('<b><i>‚ö† –° –≤–∞—à–∏–º <u>api</u> —á—Ç–æ-—Ç–æ –Ω–µ —Ç–∞–∫! ‚ö†</i></b>', parse_mode='HTML')
            if answer is True:
                status_code = 1
                API = api
        else:
            status_code = 1
            API = VIRUSTOTAL_API

        if status_code == 1:

            await msg.edit_text('<b>üìÑ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–∑–º–µ—Ä–∞ —Ñ–∞–π–ª–∞</b>', parse_mode='HTML')

            if message.document.file_size <= 20971520:

                file_name = f'files/{message.document.file_name}'

                await msg.edit_text('<b>üì• –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä</b>', parse_mode='HTML')

                if await download_file(message, file_name):

                    first_time = datetime.datetime.now()

                    await msg.edit_text('<b>üì§ –í—ã–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–∞ –Ω–∞ –∞–Ω–∞–ª–∏–∑</b>', parse_mode='HTML')

                    hash_file, vtotal = await send_to_analys(file_name, API)

                    if hash_file != 'Error':

                        await msg.edit_text('<b>üí§ –û–∂–∏–¥–∞–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞ —Å —Å–µ—Ä–≤–µ—Ä–∞</b>', parse_mode='HTML')

                        await del_file(file_name)

                        database, error = await get_info_about_file(hash_file, vtotal)

                        if database != 'Error API':

                            await msg.edit_text('<b>üóÇ –°—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞</b>', parse_mode='HTML')

                            last_analys, first_analys, prog, malicious, type, hash, magic, size, id, tag = await check_answer(database)

                            if API == VIRUSTOTAL_API:
                                api_key = ''
                            else:
                                api_key = f"\nüîë –í–∞—à api:\n‚ñ´{API}\n"

                            second_time = datetime.datetime.now()

                            time = second_time - first_time

                            text = await return_data_analys_text(last_analys, first_analys, prog, malicious, type, hash, magic, size, id, tag, message.document.file_name, time.seconds, api_key)

                            await msg.edit_text(text, parse_mode='HTML')

                        else:
                            await del_file(file_name)
                            await msg.edit_text(
                                f'<b><i>‚ö† –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞! ‚ö†\n–û—à–∏–±–∫–∞:</i></b>\n{error}\n\n–ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø–æ–≤—Ç–æ—Ä–∏—Ç—å—Å—è, –ø—Ä–æ—Å—å–±–∞ –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏ –±–æ—Ç–∞.',
                                parse_mode='HTML')

                    else:
                        await del_file(file_name)
                        await msg.edit_text(f'<b><i>‚ö† –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞! ‚ö†\n–û—à–∏–±–∫–∞:</i></b>\n{vtotal}\n\n–ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø–æ–≤—Ç–æ—Ä–∏—Ç—å—Å—è, –ø—Ä–æ—Å—å–±–∞ –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏ –±–æ—Ç–∞.',
                                                parse_mode='HTML')


                else:
                    await del_file(file_name)
                    await msg.edit_text('<b><i>‚ö† –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏ —Ñ–∞–π–ª–∞! ‚ö†</i></b>',
                                        parse_mode='HTML')

            else:
                await msg.edit_text('<b><i>‚ö† –ü—Ä–µ–≤—ã—à–µ–Ω–æ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–∞ —Ñ–∞–π–ª–∞ –≤ 20 –ú–±! ‚ö†</i></b>', parse_mode='HTML')


    else:
        await msg.edit_text('<b><i>‚ö† –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Ç–∏–ø —Ñ–∞–π–ª–∞ ‚ö†</i></b>', parse_mode='html')





if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)


